name: Mechanic_Shop

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FLASK_APP: "flask_app:create_app"
      FLASK_ENV: testing
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug DATABASE_URL
        run: echo "DATABASE_URL is set to '${DATABASE_URL}"
      
      - name: Stamp DB to head
        run: flask db stamp head

      - name: Apply migrations
        run: flask db upgrade

      - name: Run tests with coverage
        run: pytest --cov=app --cov-report=term-missing

      - name: List installed packages
        run: pip list

  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      FLASK_APP: flask_app.py
      FLASK_ENV: production
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: flask db upgrade

      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}